{"version":3,"sources":["webpack://ieee-gect/./src/components/seo.jsx","webpack://ieee-gect/./src/pages/404.jsx"],"names":["SEO","description","lang","meta","title","image","fav","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","Helmet","htmlAttributes","link","rel","type","href","titleTemplate","name","content","property","author","concat","defaultProps","className","Link","to","S","src","placeholder","formats","quality","alt"],"mappings":"4/FAYA,SAASA,EAAT,GAA8D,IAAD,IAA9CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC5CC,GAASC,oBAAe,YAAxBD,KAcFE,EAAkBR,GAAeM,EAAKG,aAAaT,YACrDU,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBN,MAYtC,OATKA,IACHA,EAAQO,EACRA,EAAe,IAGZN,IACHA,EAPA,sFAWA,gBAAC,EAAAO,OAAD,CACEC,eAAgB,CACdX,QAEFE,MAAOA,EACPU,KAAM,CACJ,CACEC,IAAK,OACLC,KAAMV,EAAM,aAAe,YAC3BW,KAAMX,GAAY,iBAGtBY,cAAeP,EAAY,QAAWA,EAAiB,KACvDR,KAAM,CACJ,CACEgB,KAAK,cACLC,QAASX,GAEX,CACEY,SAAS,WACTD,QAAShB,GAEX,CACEiB,SAAS,iBACTD,QAASX,GAEX,CACEY,SAAS,WACTD,QAASf,GAEX,CACEgB,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAb,EAAKG,oBAAL,eAAmBY,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAAShB,GAEX,CACEe,KAAK,sBACLC,QAASX,IAEXc,OAAOpB,KAKfH,EAAIwB,aAAe,CACjBtB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,qFCrEA,UAlCqB,kBACnB,gCACE,gBAAC,IAAD,CAAKG,MAAM,mBACX,uBAAKqB,UAAU,+CACb,uBAAKA,UAAU,6FACb,uBAAKA,UAAU,YACb,uBAAKA,UAAU,gCAAf,OACA,qBAAGA,UAAU,sCAAb,qCAGA,qBAAGA,UAAU,QAAb,yEAIA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KACP,0BAAQF,UAAU,0NAAlB,aAKJ,uBAAKA,UAAU,4BACb,gBAAC,EAAAG,EAAD,CACEC,IAAI,wBACJC,YAAY,UACZC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,IACTC,IAAI,UALN","file":"component---src-pages-404-jsx-da2b576082171b7035c3.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title, image, fav }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  let defaultTitle = site.siteMetadata?.title\n  let defaultImage =\n    \"https://ik.imagekit.io/ieeeGec/ieee-whitebg_Ctx6EfXez.png?tr=w-1080,h-1080,fo-auto\"\n  if (!title) {\n    title = defaultTitle\n    defaultTitle = \"\"\n  }\n\n  if (!image) {\n    image = defaultImage\n  }\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      link={[\n        {\n          rel: \"icon\",\n          type: fav ? \"image/jpeg\" : \"image/png\",\n          href: fav ? fav : \"/favicon.png\",\n        },\n      ]}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:image`,\n          content: image,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <>\n    <Seo title=\"404: Not found\" />\n    <div className=\"fixed inset-0 bg-gray-200 flex items-center\">\n      <div className=\"container flex flex-col md:flex-row items-center justify-center px-5 text-gray-700 m-auto\">\n        <div className=\"max-w-md\">\n          <div className=\"text-5xl font-dark font-bold\">404</div>\n          <p className=\"text-3xl font-light leading-normal\">\n            Sorry we couldn't find this page.\n          </p>\n          <p className=\"mb-8\">\n            But don't worry, you can find plenty of other things on our\n            homepage.\n          </p>\n          <Link to=\"/\">\n            <button className=\"px-4 inline py-2 text-sm font-medium leading-5 shadow text-white transition-colors duration-150 border border-transparent rounded-lg focus:outline-none focus:shadow-outline-blue bg-ieee-blue hover:bg-ieee-blue-dark\">\n              Go home\n            </button>\n          </Link>\n        </div>\n        <div className=\"max-w-lg hidden lg:block\">\n          <StaticImage\n            src=\"../images/sad-cat.png\"\n            placeholder=\"blurred\"\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n            quality={100}\n            alt=\"Sad Cat\"\n          />\n        </div>\n      </div>\n    </div>\n  </>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}